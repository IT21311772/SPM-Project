[{"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\index.js":"1","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\App.js":"3","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\addDetails.js":"4","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\details.js":"5","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\FinanceReport.js":"6","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\navBar.js":"7","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\About.js":"8","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\contactUs.js":"9","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\footer.js":"10"},{"size":669,"mtime":1694234724597,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1691669823040,"results":"13","hashOfConfig":"12"},{"size":1036,"mtime":1695668297063,"results":"14","hashOfConfig":"12"},{"size":8497,"mtime":1694758112748,"results":"15","hashOfConfig":"12"},{"size":15251,"mtime":1695698353855,"results":"16","hashOfConfig":"12"},{"size":3988,"mtime":1694759193129,"results":"17","hashOfConfig":"12"},{"size":1001,"mtime":1695668455085,"results":"18","hashOfConfig":"12"},{"size":140,"mtime":1695667611731,"results":"19","hashOfConfig":"12"},{"size":1618,"mtime":1695809120316,"results":"20","hashOfConfig":"12"},{"size":1427,"mtime":1695701273251,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"oygsse",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\index.js",[],[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\App.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\addDetails.js",["57","58","59","60","61","62"],[],"import { Form } from \"react-bootstrap\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './transactions.css';\r\n\r\nfunction CreatePost () {\r\n\r\n    useEffect(() => {\r\n        getDate();\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState ({\r\n        amount:\"\",\r\n        type:\"\",\r\n        category:\"\",\r\n        date:\"\",\r\n        description:\"\",\r\n        reference:\"\",\r\n    });\r\n    const [date, setDate] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const [amountError, setAmountError] = useState(\"\");\r\n    const [typeError, setTypeError] = useState(\"\");\r\n    const [categoryError, setCategoryError] = useState(\"\");\r\n    const [descriptionError, setDescriptionError] = useState(\"\");\r\n    const [referenceError, setReferenceError] = useState(\"\");\r\n\r\n    const validationForm = () => {\r\n        let valid = true;\r\n\r\n        const Amount = document.getElementById('amount');\r\n        if (data.amount == '') {\r\n            Amount.setCustomValidity('Please Enter the Amount');\r\n            setAmountError(\"Please Enter the Amount\");\r\n            valid = false;\r\n        }else if (isNaN(data.amount)) {\r\n            Amount.setCustomValidity('Please Enter a valid Amount');\r\n            setAmountError(\"Please Enter a valid Amount\");\r\n            valid = false;\r\n        } else {\r\n            Amount.setCustomValidity('');\r\n            setAmountError(\"\");\r\n        }\r\n\r\n        const Type = document.getElementById('type');\r\n        if (data.type == '') {\r\n            Type.setCustomValidity('Please select a Type');\r\n            setTypeError(\"Please select a Type\");\r\n            valid = false;\r\n        } else {\r\n            Type.setCustomValidity('');\r\n            setTypeError(\"\");\r\n        }\r\n\r\n        const Category = document.getElementById('category');\r\n        if (data.category == '') {\r\n            Category.setCustomValidity('Please select a Category');\r\n            setCategoryError(\"Please select a Category\");\r\n            valid = false;\r\n        } else {\r\n            Category.setCustomValidity('');\r\n            setCategoryError(\"\");\r\n        }\r\n\r\n        const Description = document.getElementById('description');\r\n        if (data.description == '') {\r\n            Description.setCustomValidity('Please enter a Description');\r\n            setDescriptionError(\"Please enter a Description\");\r\n            valid = false;\r\n        } else {\r\n            Description.setCustomValidity('');\r\n            setDescriptionError(\"\");\r\n        }\r\n\r\n        const Reference = document.getElementById('reference');\r\n        if (data.reference == '') {\r\n            Reference.setCustomValidity('Please enter a reference');\r\n            setReferenceError(\"Please enter a Reference\");\r\n            valid = false;\r\n        } else {\r\n            Reference.setCustomValidity('');\r\n            setReferenceError(\"\");\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    //add transaction form validation\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(validationForm()){\r\n            axios.post(\"/api/Fin/add\", data)\r\n            .then((res) => console.log(res))\r\n            .catch((err) => console.log(err));\r\n\r\n            navigate(\"trans\");\r\n        }\r\n        \r\n    };\r\n\r\n    const getDate = () => {\r\n        const date = new Date();\r\n        let currentDay= String(date.getDate()).padStart(2, '0');\r\n        let currentMonth = String(date.getMonth()+1).padStart(2,\"0\");\r\n        let currentYear = date.getFullYear();\r\n        let currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\n        setDate(currentDate);\r\n        setData({\r\n            amount:\"\",\r\n            type:\"\",\r\n            category:\"\",\r\n            date:currentDate,\r\n            description:\"\",\r\n            reference:\"\",\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"finance-create\">\r\n\r\n        <div className=\"Create-post\">\r\n            <h3 className=\"title\">Add Transaction Details</h3><br />\r\n            <Form className=\"Form\">\r\n                <Form.Group className=\"Form-Group\">\r\n                    <Form.Control className=\"Form-Control\" \r\n                        id=\"amount\"\r\n                        name=\"amount\" \r\n                        value={data.amount}\r\n                        placeholder=\"Enter Amount (LKR)\"\r\n                        onChange={handleChange}\r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required />\r\n                    { amountError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{amountError}</div> }\r\n                    \r\n                    <Form.Select className=\"Form-Control\" \r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        value={data.type} \r\n                        placeholder=\"Transaction Type\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required>\r\n                            <option>Select Transaction Type</option>\r\n                            <option>Income</option>\r\n                            <option>Expense</option>\r\n                    </Form.Select>\r\n                    { typeError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{typeError}</div> }\r\n\r\n                    <Form.Select className=\"Form-Control\" \r\n                        id=\"category\"\r\n                        name=\"category\"\r\n                        value={data.category} \r\n                        placeholder=\"Category\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required>\r\n                            <option>Select Category</option>\r\n                            <option>Salary</option>\r\n                            <option>Shop Fees</option>\r\n                            <option>Supplier charges</option>\r\n                            <option>Bills</option>\r\n                            <option>TAX</option>\r\n                            <option>Services</option> \r\n                    </Form.Select>\r\n                    { categoryError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{categoryError}</div> }\r\n\r\n                    <Form.Control className=\"Form-Control\"\r\n                        name=\"date\" \r\n                        value={data.date}\r\n                        placeholder=\"Date\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        readOnly={true}\r\n                        required />\r\n\r\n                    <Form.Control className=\"Form-Control\"\r\n                        id=\"description\"\r\n                        name=\"description\" \r\n                        value={data.description}\r\n                        placeholder=\"Enter Description\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required />\r\n                    { descriptionError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{descriptionError}</div> }\r\n\r\n                    <Form.Control className=\"Form-Control\"\r\n                        id=\"reference\"\r\n                        name=\"reference\" \r\n                        value={data.reference}\r\n                        placeholder=\"Enter Reference\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required />\r\n                    { referenceError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{referenceError}</div> }\r\n                </Form.Group>\r\n                <br />\r\n                < button style={{borderRadius:\"5px\", background:\"#A7D5E5\", padding:\"1.5%\", width:\"45%\", fontSize:\"17px\", \r\n                paddingLeft:\"5px\", paddingRight:\"5px\", border:\"#A7D5E5\"}} onClick={handleClick}>ADD TRANSACTION</button>\r\n            </Form>\r\n            <br />\r\n            {/* <br />\r\n            <button style={{borderRadius:\"5px\", background:\"#a66f72\", padding:\"0.5%\"}} onClick={() => navigate(-1)}> BACK </button>   */}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\details.js",["63","64","65"],[],"import { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Form, InputGroup } from \"react-bootstrap\";\r\n// import {useNavigate } from \"react-router-dom\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Link } from \"react-router-dom\";\r\nimport './transactions.css';\r\nimport NavBar from \"./navBar\";\r\nimport Footer from \"./footer\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [updatedPost, setUpdatedPost] = useState({})\r\n    const [search, setSearch] = useState('');\r\n    const [income, SetIncome] = useState(0);\r\n    const [expenses, SetExpenses] = useState(0);\r\n    console.log(search);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/api/Fin/trans\")\r\n            .then((res) => {\r\n                console.log(res)\r\n                setData(res.data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => { \r\n        let amount1 = 0;\r\n        let amount2 = 0;\r\n        if(data){\r\n            data.map((post) => {\r\n                if(post.type == \"Income\"){\r\n                    amount1 = amount1 + post.amount;\r\n                }\r\n                else{\r\n                    amount2 = amount2 + post.amount;\r\n                }\r\n        })\r\n        SetIncome(amount1);\r\n        SetExpenses(amount2);\r\n        }\r\n\r\n    }, [data]);\r\n\r\n    //delete validation\r\n    const deletePost = (id) => {\r\n        let text = \"Do you want to delete\";\r\n        if (window.confirm(text) == true) {\r\n            axios\r\n            .delete(`/api/Fin/delete/${id}`)\r\n            .then((res) => console.log(res))\r\n            .catch((err) => console.log(err));\r\n            \r\n            window.location.reload();\r\n        } \r\n\r\n    };\r\n\r\n    const updatePost = (post) => {\r\n    setUpdatedPost(post);\r\n    handleShow();\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n    const { name, value} = e.target;\r\n\r\n    setUpdatedPost((prev) => {\r\n        return {\r\n            ...prev,\r\n            [name]: value,\r\n        };\r\n    });\r\n    };\r\n\r\n    const saveUpdatedPost = () => {\r\n    axios.put(`/api/Fin/update/${updatedPost._id}`, updatedPost)\r\n    .then((res) => console.log(res))\r\n    .catch((err) => console.log(err));\r\n\r\n    handleClose();\r\n    window.location.reload();\r\n    };\r\n\r\n    // Set the state as ascending order\r\n    const [order, setOrder] = useState(\"ASC\");\r\n\r\n    // Bubble Sort Algorithm to sort the data\r\n    const bubbleSort = (array, col) => {\r\n    const arr = [...array];\r\n    const n = arr.length;\r\n    let swapped;\r\n    \r\n    do {\r\n        swapped = false;\r\n        for (let i = 0; i < n - 1; i++) {\r\n        if ((order === \"ASC\" && arr[i][col] > arr[i + 1][col]) || (order === \"DESC\" && arr[i][col] < arr[i + 1][col])) {\r\n            const temp = arr[i];\r\n            arr[i] = arr[i + 1];\r\n            arr[i + 1] = temp;\r\n            swapped = true;\r\n        }\r\n        }\r\n    } while (swapped);\r\n    \r\n    return arr;\r\n    };\r\n\r\n    // Quick Sort Algorithm to sort the date\r\n    const quickSort = (array, col) => {\r\n        if (array.length <= 1) {\r\n            return array;\r\n        }\r\n    \r\n        const pivot = array[Math.floor(Math.random() * array.length)];\r\n        const left = [];\r\n        const right = [];\r\n        const equal = [];\r\n    \r\n        array.forEach((item) => {\r\n        if ((order === \"ASC\" && item[col] < pivot[col]) || (order === \"DESC\" && item[col] > pivot[col])) {\r\n            left.push(item);\r\n        } else if (item[col] === pivot[col]) {\r\n            equal.push(item);\r\n        } else {\r\n            right.push(item);\r\n        }\r\n        });\r\n  \r\n        const sortedLeft = quickSort(left, col);\r\n        const sortedRight = quickSort(right, col);\r\n    \r\n        return [...sortedLeft, ...equal, ...sortedRight];\r\n    };\r\n\r\n    const quickSorting = (col) => {\r\n        const sortedData = quickSort(data, col);\r\n        setData(sortedData);\r\n        setOrder(order === \"ASC\" ? \"DESC\" : \"ASC\");\r\n    };\r\n\r\n    const sorting = (col) => {\r\n        const sortedData = bubbleSort(data, col);\r\n        setData(sortedData);\r\n        setOrder(order === \"ASC\" ? \"DESC\" : \"ASC\");\r\n    };\r\n\r\n\r\nreturn (\r\n    <div className=\"finance\">   \r\n    <NavBar />    \r\n      <br /><br />\r\n        <Modal show={show} onHide={handleClose} >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title style={{color:\"#373B61\", fontWeight:\"bold\", marginLeft:\"21%\"}}>Update Transactions</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body style={{width:\"100%\", height:\"200%\"}}>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Control \r\n                            style={{width: \"80%\",\r\n                                    padding: \"6px 10px\",\r\n                                    margin: \"10px 0\",\r\n                                    border: \"1px solid #373B61\",\r\n                                    borderRadius: \"5px\",\r\n                                    boxSizing: \"border-box\",\r\n                                    display: \"block\",\r\n                                    marginLeft: \"10%\"}}\r\n                            placeholder=\"Amount\"\r\n                            name=\"amount\"\r\n                            value={updatedPost.amount ? updatedPost.amount : \"\"}\r\n                            onChange={handleChange}/>\r\n                        <Form.Select\r\n                            style={{width: \"80%\",\r\n                            padding: \"6px 10px\",\r\n                            margin: \"10px 0\",\r\n                            border: \"1px solid #373B61\",\r\n                            borderRadius: \"5px\",\r\n                            boxSizing: \"border-box\",\r\n                            display: \"block\",\r\n                            marginLeft: \"10%\"}}\r\n                            placeholder=\"type\"\r\n                            name=\"type\"\r\n                            value={updatedPost.type ? updatedPost.type : \"\"}\r\n                            onChange={handleChange}>\r\n                                <option>Transaction Type</option>\r\n                                <option>Income</option>\r\n                                <option>Expense</option>\r\n                            </Form.Select>\r\n                        <Form.Select \r\n                            style={{width: \"80%\",\r\n                            padding: \"6px 10px\",\r\n                            margin: \"10px 0\",\r\n                            border: \"1px solid #373B61\",\r\n                            borderRadius: \"5px\",\r\n                            boxSizing: \"border-box\",\r\n                            display: \"block\",\r\n                            marginLeft: \"10%\"}}\r\n                            placeholder=\"Category\"\r\n                            name=\"category\"\r\n                            value={updatedPost.category ? updatedPost.category : \"\"}\r\n                            onChange={handleChange}>\r\n                            <option>Select Category</option>\r\n                            <option>Salary</option>\r\n                            <option>Stationery</option>\r\n                            <option>Supplier charges</option>\r\n                            <option>Food</option>\r\n                            <option>Transport</option>\r\n                            <option>Bills</option>\r\n                            <option>Medical</option>\r\n                            <option>TAX</option>\r\n                            <option>Services</option>\r\n                            </Form.Select>\r\n                        <Form.Control \r\n                            style={{width: \"80%\",\r\n                            padding: \"6px 10px\",\r\n                            margin: \"10px 0\",\r\n                            border: \"1px solid #373B61\",\r\n                            borderRadius: \"5px\",\r\n                            boxSizing: \"border-box\",\r\n                            display: \"block\",\r\n                            marginLeft: \"10%\"}}\r\n                            placeholder=\"Date\"\r\n                            name=\"date\"\r\n                            value={updatedPost.date ? updatedPost.date : \"\"}\r\n                            readOnly={true}\r\n                            onChange={handleChange}/>\r\n                        <Form.Control \r\n                            style={{width: \"80%\",\r\n                            padding: \"6px 10px\",\r\n                            margin: \"10px 0\",\r\n                            border: \"1px solid #373B61\",\r\n                            borderRadius: \"5px\",\r\n                            boxSizing: \"border-box\",\r\n                            display: \"block\",\r\n                            marginLeft: \"10%\"}}\r\n                            placeholder=\"Description\"\r\n                            name=\"description\"\r\n                            value={updatedPost.description ? updatedPost.description : \"\"}\r\n                            onChange={handleChange}/>\r\n                        <Form.Control \r\n                            style={{width: \"80%\",\r\n                            padding: \"6px 10px\",\r\n                            margin: \"10px 0\",\r\n                            border: \"1px solid #373B61\",\r\n                            borderRadius: \"5px\",\r\n                            boxSizing: \"border-box\",\r\n                            display: \"block\",\r\n                            marginLeft: \"10%\"}}\r\n                            placeholder=\"Reference\"\r\n                            name=\"reference\"\r\n                            value={updatedPost.reference ? updatedPost.reference : \"\"}\r\n                            onChange={handleChange}/>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button style={{borderRadius:\"5px\", background:\"#373B61\", padding:\"1.5%\", width:\"200px\", fontSize:\"17px\", \r\n                    border:\"#373B61\", marginRight:\"25%\", color:\"white\"}} onClick={saveUpdatedPost}>\r\n                        Save Changes\r\n                </button>\r\n                <button style={{borderRadius:\"5px\", background:\"#373B61\", padding:\"1.5%\", width:\"200px\", fontSize:\"17px\", \r\n                border:\"#373B61\", marginRight:\"25%\", color:\"white\"}} onClick={handleClose}>\r\n                    Close\r\n                </button>\r\n                <br />\r\n                \r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        {data ? (\r\n            \r\n            <div className=\"content\">\r\n            \r\n            <Form>\r\n                <InputGroup className=\"my-1\" style={{width:\"20%\", marginLeft:\"75%\", color:\"#373B61\", borderColor:\"#373B61%\"}}>\r\n                    <Form.Control \r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                    placeholder=\"Search here\"/>\r\n                </InputGroup>\r\n            </Form>\r\n            <br />\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button style={{borderRadius:\"5px\", background:\"#373B61\", padding:\"0.5%\", border:\"#373B61\"}}><Link to=\"/fin/add\" style={{color:\"#EDEFFE\", textDecoration:\"none\"}}>Add Transactions</Link></button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button style={{borderRadius:\"5px\", background:\"#373B61\", padding:\"0.5%\", border:\"#373B61\"}}><Link to=\"/fin/report\" style={{color:\"#EDEFFE\", textDecoration:\"none\"}}>Finance Report</Link></button>\r\n            \r\n                <br /><br />\r\n                <center>\r\n                    <h1 style={{color:\"#373B61\", fontWeight:\"bolder\", fontSize:\"50px\"}}>Income & Expense</h1>\r\n                </center>\r\n\r\n                <div className=\"container\">\r\n                <button onClick={()=>quickSorting('type') }>Sort by Type</button>&nbsp;\r\n                <button onClick={()=>sorting('amount') }>Sort by Amount</button>&nbsp;\r\n                </div>\r\n                <br />\r\n                <div className=\"container\">\r\n                    <div style={{textAlign:\"right\", fontSize:\"20px\", fontWeight:\"bold\"}}>\r\n                        Income - LKR. \r\n                        <span>{income} </span>\r\n                    </div>\r\n                    <div style={{textAlign:\"right\", fontSize:\"20px\", fontWeight:\"bold\"}}>\r\n                        Expenses - LKR. \r\n                        <span>{expenses} </span>\r\n                    </div>\r\n                    <div className=\"balance\">\r\n                        Profit - LKR. \r\n                        <span>{income - expenses} </span>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n\r\n            <div className=\"container\">   \r\n            \r\n                <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                  <th scope=\"col\">Id</th>\r\n                  <th scope=\"col\">Amount(LKR)</th>\r\n                  <th scope=\"col\" onClick={()=>sorting(\"type\") }>Type</th>\r\n                  <th scope=\"col\">Category</th>\r\n                  <th scope=\"col\">Date</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\" onClick={()=>sorting(\"reference\") }>Reference</th>\r\n                  <th></th>\r\n                  <th scope=\"col\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n               \r\n                    \r\n                        {data.filter((post) => {\r\n                            return search.toLowerCase() === ''\r\n                                ? post\r\n                                : post.category.toLowerCase().includes(search) ||\r\n                                  post.type.toLowerCase().includes(search) ||\r\n                                  post.date.toLowerCase().includes(search) ||\r\n                                  post.reference.toLowerCase().includes(search) ||\r\n                                  post.description.toLowerCase().includes(search)\r\n                        })\r\n                        .map((post,index) => {\r\n\r\n                    return (\r\n                        <tbody>\r\n                        <tr>\r\n                        <td>{index+1}</td>\r\n                        <td>{post.amount}.00</td>\r\n                        <td>{post.type}</td>\r\n                        <td>{post.category}</td>\r\n                        <td>{post.date}</td>\r\n                        <td>{post.description}</td>\r\n                        <td>{post.reference}</td>\r\n                        <td >\r\n                        \r\n                        <button  style={{width: \"80%\",\r\n                                    marginLeft:'10px'                   \r\n                        }} onClick={() => updatePost(post)}>UPDATE</button>   </td>\r\n\r\n                        <td>\r\n                        <button style={{width: \"90%\", marginLeft:'-20%', marginTop:\"\"}} onClick={() => deletePost(post._id)}>DELETE</button>\r\n                        </td>\r\n                        \r\n                        \r\n                        </tr>\r\n                        </tbody>\r\n                             \r\n                    );\r\n                })}\r\n                </table>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n          \"\"\r\n        )}  \r\n        <Footer />\r\n  </div>\r\n);\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\FinanceReport.js",["66","67"],[],"import React,{ useRef} from \"react\";\r\nimport { useReactToPrint} from 'react-to-print';\r\nimport { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst ReactPdfPrint = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [income, SetIncome] = useState(0);\r\n    const [expenses, SetExpenses] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/api/Fin/trans\")\r\n            .then((res) => {\r\n                console.log(res)\r\n                setPosts(res.data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n}, []);\r\n\r\nuseEffect(() => { \r\n    let amount1 = 0;\r\n    let amount2 = 0;\r\n    if(posts){\r\n        posts.map((post) => {\r\n            if(post.type == \"Income\"){\r\n                amount1 = amount1 + post.amount;\r\n            }\r\n            else{\r\n                amount2 = amount2 + post.amount;\r\n            }\r\n    })\r\n    SetIncome(amount1);\r\n    SetExpenses(amount2);\r\n    }\r\n\r\n}, [posts]);\r\n\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        documentTitle: 'salon-packages'\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"report\">\r\n            <div ref={componentRef}>\r\n                <h3 style={{fontWeight:\"bold\", textAlign:\"center\", backgroundColor:\"#373B61\", padding:\"3%\", marginTop:\"-1%\", color:\"#EDEFFE\"}}>Finance Report</h3>\r\n                <br />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"reportincome\">\r\n                        Income - LKR.\r\n                        <span>{income} </span>\r\n                    </div>\r\n                    <div className=\"reportincome\">\r\n                        Expenses - LKR.\r\n                        <span>{expenses} </span>\r\n                    </div>\r\n                    <div className=\"reportbalance\">\r\n                        Profit - LKR.\r\n                        <span>{income - expenses} </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/>\r\n                <Table className=\"reportTable\" bordered>\r\n                    <thead>\r\n                        <th className=\"col\">ID</th>\r\n                        <th>Amount</th>\r\n                        <th className=\"col\">Type</th>\r\n                        <th>Category</th>\r\n                        <th className=\"col\">Date</th>\r\n                        <th>Description</th>\r\n                        <th className=\"col\">Reference</th>\r\n                    </thead>\r\n                    <tbody>\r\n                    {posts ? (\r\n                        <>\r\n                            {posts.map((post, index) => {\r\n                                return (\r\n                                        <tr key={post._id}>\r\n                                            <td className=\"col\">{index+1}</td>\r\n                                            <td>{post.amount}</td>\r\n                                            <td className=\"col\">{post.type}</td>\r\n                                            <td>{post.category}</td>\r\n                                            <td className=\"col\">{post.date}</td>\r\n                                            <td>{post.description}</td>\r\n                                            <td className=\"col\">{post.reference}</td>\r\n                                        </tr>\r\n                                        );\r\n                            })}\r\n                        </>\r\n                    ) : (\r\n                     \"\"\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <br />\r\n            <center>\r\n                <button style={{borderRadius:\"5px\", width:\"20%\", backgroundColor:\"#373B61\", color:\"white\"}} onClick={handlePrint}>Download</button>\r\n            </center>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReactPdfPrint;","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\navBar.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\About.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\contactUs.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\footer.js",[],[],[],{"ruleId":"68","severity":1,"message":"69","line":22,"column":12,"nodeType":"70","messageId":"71","endLine":22,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":45,"column":25,"nodeType":"74","messageId":"75","endLine":45,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":59,"column":23,"nodeType":"74","messageId":"75","endLine":59,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":69,"column":27,"nodeType":"74","messageId":"75","endLine":69,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":79,"column":30,"nodeType":"74","messageId":"75","endLine":79,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":89,"column":28,"nodeType":"74","messageId":"75","endLine":89,"endColumn":30},{"ruleId":"76","severity":1,"message":"77","line":40,"column":29,"nodeType":"78","messageId":"79","endLine":40,"endColumn":31},{"ruleId":"72","severity":1,"message":"73","line":41,"column":30,"nodeType":"74","messageId":"75","endLine":41,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":57,"column":34,"nodeType":"74","messageId":"75","endLine":57,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":27,"column":26,"nodeType":"78","messageId":"79","endLine":27,"endColumn":28},{"ruleId":"72","severity":1,"message":"73","line":28,"column":26,"nodeType":"74","messageId":"75","endLine":28,"endColumn":28},"no-unused-vars","'date' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]