[{"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\index.js":"1","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\App.js":"3","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\addDetails.js":"4","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\details.js":"5","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\FinanceReport.js":"6","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\navBar.js":"7","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\About.js":"8","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\contactUs.js":"9","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\footer.js":"10"},{"size":669,"mtime":1694234724597,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1691669823040,"results":"13","hashOfConfig":"12"},{"size":1036,"mtime":1695668297063,"results":"14","hashOfConfig":"12"},{"size":8497,"mtime":1694758112748,"results":"15","hashOfConfig":"12"},{"size":15147,"mtime":1695809674933,"results":"16","hashOfConfig":"12"},{"size":3988,"mtime":1694759193129,"results":"17","hashOfConfig":"12"},{"size":1001,"mtime":1695668455085,"results":"18","hashOfConfig":"12"},{"size":1031,"mtime":1695810286133,"results":"19","hashOfConfig":"12"},{"size":1615,"mtime":1695809738891,"results":"20","hashOfConfig":"12"},{"size":1427,"mtime":1695701273251,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"oygsse",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\index.js",[],[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\App.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\addDetails.js",["56","57","58","59","60","61"],[],"import { Form } from \"react-bootstrap\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './transactions.css';\r\n\r\nfunction CreatePost () {\r\n\r\n    useEffect(() => {\r\n        getDate();\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState ({\r\n        amount:\"\",\r\n        type:\"\",\r\n        category:\"\",\r\n        date:\"\",\r\n        description:\"\",\r\n        reference:\"\",\r\n    });\r\n    const [date, setDate] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const [amountError, setAmountError] = useState(\"\");\r\n    const [typeError, setTypeError] = useState(\"\");\r\n    const [categoryError, setCategoryError] = useState(\"\");\r\n    const [descriptionError, setDescriptionError] = useState(\"\");\r\n    const [referenceError, setReferenceError] = useState(\"\");\r\n\r\n    const validationForm = () => {\r\n        let valid = true;\r\n\r\n        const Amount = document.getElementById('amount');\r\n        if (data.amount == '') {\r\n            Amount.setCustomValidity('Please Enter the Amount');\r\n            setAmountError(\"Please Enter the Amount\");\r\n            valid = false;\r\n        }else if (isNaN(data.amount)) {\r\n            Amount.setCustomValidity('Please Enter a valid Amount');\r\n            setAmountError(\"Please Enter a valid Amount\");\r\n            valid = false;\r\n        } else {\r\n            Amount.setCustomValidity('');\r\n            setAmountError(\"\");\r\n        }\r\n\r\n        const Type = document.getElementById('type');\r\n        if (data.type == '') {\r\n            Type.setCustomValidity('Please select a Type');\r\n            setTypeError(\"Please select a Type\");\r\n            valid = false;\r\n        } else {\r\n            Type.setCustomValidity('');\r\n            setTypeError(\"\");\r\n        }\r\n\r\n        const Category = document.getElementById('category');\r\n        if (data.category == '') {\r\n            Category.setCustomValidity('Please select a Category');\r\n            setCategoryError(\"Please select a Category\");\r\n            valid = false;\r\n        } else {\r\n            Category.setCustomValidity('');\r\n            setCategoryError(\"\");\r\n        }\r\n\r\n        const Description = document.getElementById('description');\r\n        if (data.description == '') {\r\n            Description.setCustomValidity('Please enter a Description');\r\n            setDescriptionError(\"Please enter a Description\");\r\n            valid = false;\r\n        } else {\r\n            Description.setCustomValidity('');\r\n            setDescriptionError(\"\");\r\n        }\r\n\r\n        const Reference = document.getElementById('reference');\r\n        if (data.reference == '') {\r\n            Reference.setCustomValidity('Please enter a reference');\r\n            setReferenceError(\"Please enter a Reference\");\r\n            valid = false;\r\n        } else {\r\n            Reference.setCustomValidity('');\r\n            setReferenceError(\"\");\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    //add transaction form validation\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(validationForm()){\r\n            axios.post(\"/api/Fin/add\", data)\r\n            .then((res) => console.log(res))\r\n            .catch((err) => console.log(err));\r\n\r\n            navigate(\"trans\");\r\n        }\r\n        \r\n    };\r\n\r\n    const getDate = () => {\r\n        const date = new Date();\r\n        let currentDay= String(date.getDate()).padStart(2, '0');\r\n        let currentMonth = String(date.getMonth()+1).padStart(2,\"0\");\r\n        let currentYear = date.getFullYear();\r\n        let currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\n        setDate(currentDate);\r\n        setData({\r\n            amount:\"\",\r\n            type:\"\",\r\n            category:\"\",\r\n            date:currentDate,\r\n            description:\"\",\r\n            reference:\"\",\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"finance-create\">\r\n\r\n        <div className=\"Create-post\">\r\n            <h3 className=\"title\">Add Transaction Details</h3><br />\r\n            <Form className=\"Form\">\r\n                <Form.Group className=\"Form-Group\">\r\n                    <Form.Control className=\"Form-Control\" \r\n                        id=\"amount\"\r\n                        name=\"amount\" \r\n                        value={data.amount}\r\n                        placeholder=\"Enter Amount (LKR)\"\r\n                        onChange={handleChange}\r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required />\r\n                    { amountError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{amountError}</div> }\r\n                    \r\n                    <Form.Select className=\"Form-Control\" \r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        value={data.type} \r\n                        placeholder=\"Transaction Type\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required>\r\n                            <option>Select Transaction Type</option>\r\n                            <option>Income</option>\r\n                            <option>Expense</option>\r\n                    </Form.Select>\r\n                    { typeError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{typeError}</div> }\r\n\r\n                    <Form.Select className=\"Form-Control\" \r\n                        id=\"category\"\r\n                        name=\"category\"\r\n                        value={data.category} \r\n                        placeholder=\"Category\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required>\r\n                            <option>Select Category</option>\r\n                            <option>Salary</option>\r\n                            <option>Shop Fees</option>\r\n                            <option>Supplier charges</option>\r\n                            <option>Bills</option>\r\n                            <option>TAX</option>\r\n                            <option>Services</option> \r\n                    </Form.Select>\r\n                    { categoryError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{categoryError}</div> }\r\n\r\n                    <Form.Control className=\"Form-Control\"\r\n                        name=\"date\" \r\n                        value={data.date}\r\n                        placeholder=\"Date\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        readOnly={true}\r\n                        required />\r\n\r\n                    <Form.Control className=\"Form-Control\"\r\n                        id=\"description\"\r\n                        name=\"description\" \r\n                        value={data.description}\r\n                        placeholder=\"Enter Description\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required />\r\n                    { descriptionError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{descriptionError}</div> }\r\n\r\n                    <Form.Control className=\"Form-Control\"\r\n                        id=\"reference\"\r\n                        name=\"reference\" \r\n                        value={data.reference}\r\n                        placeholder=\"Enter Reference\"\r\n                        onChange={handleChange} \r\n                        style={{width:\"80%\", marginLeft:\"10%\"}}\r\n                        required />\r\n                    { referenceError && <div className=\"error\" style={{marginLeft:\"10%\"}}>{referenceError}</div> }\r\n                </Form.Group>\r\n                <br />\r\n                < button style={{borderRadius:\"5px\", background:\"#A7D5E5\", padding:\"1.5%\", width:\"45%\", fontSize:\"17px\", \r\n                paddingLeft:\"5px\", paddingRight:\"5px\", border:\"#A7D5E5\"}} onClick={handleClick}>ADD TRANSACTION</button>\r\n            </Form>\r\n            <br />\r\n            {/* <br />\r\n            <button style={{borderRadius:\"5px\", background:\"#a66f72\", padding:\"0.5%\"}} onClick={() => navigate(-1)}> BACK </button>   */}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\details.js",["62","63","64"],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\FinanceReport.js",["65","66"],[],"import React,{ useRef} from \"react\";\r\nimport { useReactToPrint} from 'react-to-print';\r\nimport { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst ReactPdfPrint = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [income, SetIncome] = useState(0);\r\n    const [expenses, SetExpenses] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/api/Fin/trans\")\r\n            .then((res) => {\r\n                console.log(res)\r\n                setPosts(res.data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n}, []);\r\n\r\nuseEffect(() => { \r\n    let amount1 = 0;\r\n    let amount2 = 0;\r\n    if(posts){\r\n        posts.map((post) => {\r\n            if(post.type == \"Income\"){\r\n                amount1 = amount1 + post.amount;\r\n            }\r\n            else{\r\n                amount2 = amount2 + post.amount;\r\n            }\r\n    })\r\n    SetIncome(amount1);\r\n    SetExpenses(amount2);\r\n    }\r\n\r\n}, [posts]);\r\n\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        documentTitle: 'salon-packages'\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"report\">\r\n            <div ref={componentRef}>\r\n                <h3 style={{fontWeight:\"bold\", textAlign:\"center\", backgroundColor:\"#373B61\", padding:\"3%\", marginTop:\"-1%\", color:\"#EDEFFE\"}}>Finance Report</h3>\r\n                <br />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"reportincome\">\r\n                        Income - LKR.\r\n                        <span>{income} </span>\r\n                    </div>\r\n                    <div className=\"reportincome\">\r\n                        Expenses - LKR.\r\n                        <span>{expenses} </span>\r\n                    </div>\r\n                    <div className=\"reportbalance\">\r\n                        Profit - LKR.\r\n                        <span>{income - expenses} </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/>\r\n                <Table className=\"reportTable\" bordered>\r\n                    <thead>\r\n                        <th className=\"col\">ID</th>\r\n                        <th>Amount</th>\r\n                        <th className=\"col\">Type</th>\r\n                        <th>Category</th>\r\n                        <th className=\"col\">Date</th>\r\n                        <th>Description</th>\r\n                        <th className=\"col\">Reference</th>\r\n                    </thead>\r\n                    <tbody>\r\n                    {posts ? (\r\n                        <>\r\n                            {posts.map((post, index) => {\r\n                                return (\r\n                                        <tr key={post._id}>\r\n                                            <td className=\"col\">{index+1}</td>\r\n                                            <td>{post.amount}</td>\r\n                                            <td className=\"col\">{post.type}</td>\r\n                                            <td>{post.category}</td>\r\n                                            <td className=\"col\">{post.date}</td>\r\n                                            <td>{post.description}</td>\r\n                                            <td className=\"col\">{post.reference}</td>\r\n                                        </tr>\r\n                                        );\r\n                            })}\r\n                        </>\r\n                    ) : (\r\n                     \"\"\r\n                    )}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <br />\r\n            <center>\r\n                <button style={{borderRadius:\"5px\", width:\"20%\", backgroundColor:\"#373B61\", color:\"white\"}} onClick={handlePrint}>Download</button>\r\n            </center>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReactPdfPrint;","C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\navBar.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\About.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\contactUs.js",[],[],"C:\\Users\\rishe\\OneDrive\\Desktop\\SPM-Project\\frontend\\src\\Components\\footer.js",[],[],[],{"ruleId":"67","severity":1,"message":"68","line":22,"column":12,"nodeType":"69","messageId":"70","endLine":22,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":45,"column":25,"nodeType":"73","messageId":"74","endLine":45,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":59,"column":23,"nodeType":"73","messageId":"74","endLine":59,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":69,"column":27,"nodeType":"73","messageId":"74","endLine":69,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":79,"column":30,"nodeType":"73","messageId":"74","endLine":79,"endColumn":32},{"ruleId":"71","severity":1,"message":"72","line":89,"column":28,"nodeType":"73","messageId":"74","endLine":89,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":37,"column":29,"nodeType":"77","messageId":"78","endLine":37,"endColumn":31},{"ruleId":"71","severity":1,"message":"72","line":38,"column":30,"nodeType":"73","messageId":"74","endLine":38,"endColumn":32},{"ruleId":"71","severity":1,"message":"72","line":54,"column":34,"nodeType":"73","messageId":"74","endLine":54,"endColumn":36},{"ruleId":"75","severity":1,"message":"76","line":27,"column":26,"nodeType":"77","messageId":"78","endLine":27,"endColumn":28},{"ruleId":"71","severity":1,"message":"72","line":28,"column":26,"nodeType":"73","messageId":"74","endLine":28,"endColumn":28},"no-unused-vars","'date' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]